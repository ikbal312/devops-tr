version: "3.8"
name: app
services:
  reverse-proxy-nginx:
    container_name: reverse-proxy-nginx
    image: nginx:stable-alpine
    depends_on:
      - mongo
      - api
      # - mongo-express
    volumes:
      - ./.nginx/nginx.conf:/etc/nginx/nginx.conf
    ports:
      - 80:80
    networks:
      - backend

  # mongo-express:
  #   container_name: mongo-express
  #   image: mongo-express:latest
  #   networks:
  #     - backend
  #   depends_on:
  #     - mongo
  #   ports:
  #     - 8081:8081
  #   environment:
  #     ME_CONFIG_MONGODB_ADMINUSERNAME: admin
  #     ME_CONFIG_MONGODB_ADMINPASSWORD: admin
  #     ME_CONFIG_MONGODB_SERVER: mongo

  #     ME_CONFIG_BASICAUTH_USERNAME: admin
  #     ME_CONFIG_BASICAUTH_PASSWORD : admin

  mongo:
    container_name: mongo
    image: mongo:jammy
    networks:
      - backend
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: admin

  api:
    restart: on-failure
    container_name: api
    build: ./api/
    depends_on:
      - mongo
    networks:
      - backend

    environment:
      MONGO_URL: mongodb://admin:admin@mongo:27017
      API_ROOT_PATH: "/api"
    # develop:
    #   watch:
    #     - action: sync+restart
    #       path: ./api/app
    #       target: /code/app
    #     - action: rebuild
    #       path: ./api/requirements.txt

  frontend:
    container_name: frontend
    build: 
      context: ./frontend/
      dockerfile: Dockerfile
      target: prod
    depends_on:
      - reverse-proxy-nginx
    networks:
      - backend
    # develop:
    #   watch:
    #     - action: sync+restart
    #       path: ./frontend/src
    #       target: /code/
    #     - action: rebuild
    #       path: ./frontend/package.json

networks:
  backend:
    driver: bridge

